[project]
name = "foodmood"
version = "0.1.0"
description = "FoodMood is a webpage, that let's you track your meals and your wellbeing to look for correlations"
authors = [{ name = "CeVauDe", email = "cevaude@outlook.de" }]
license = "MIT"
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = ["django (>=5.2.4,<6.0.0)", "python-dotenv (>=1.1.1,<2.0.0)", "psycopg2-binary (>=2.9.10,<3.0.0)", "django-stubs-ext (>=5.2.2,<6.0.0)", "django-types (>=0.22.0,<0.23.0)", "gunicorn (>=23.0.0,<24.0.0)", "whitenoise (>=6.9.0,<7.0.0)"]

[dependency-groups]
dev = [
    "mypy>=1.17.0",
    "pre-commit>=4.2.0",
    "ruff>=0.12.5",
    "coverage>=7.10.0",
]

[tool.mypy]
python_version = "3.13"
mypy_path = "./foodmood"

# Require type annotations
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true

# Strict optional and None checks
strict_optional = true
no_implicit_optional = true

# Warn about various issues
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unreachable = true

# Additional strict checks
check_untyped_defs = true
strict_equality = true
show_error_codes = true

[tool.poe.tasks]
# Linting and formatting
lint = "ruff check foodmood"
format = "ruff format foodmood"
format-check = "ruff format --check foodmood"

# Type checking
mypy = "mypy foodmood"
mypy-strict = "mypy foodmood --strict"

# Pre-commit
pre-commit = "pre-commit run --all-files"

# Django management
startapp  = "python foodmood/manage.py startapp"
migrate  = "python foodmood/manage.py migrate"
makemigrations  = "python foodmood/manage.py makemigrations"

# Testing
test = "python foodmood/manage.py test foodmood -p 'test*.py'"
test-p = "python foodmood/manage.py test foodmood -p 'test*.py' --parallel"
test-app = "python foodmood/manage.py test -p 'test*.py'"
test-coverage = { shell = "coverage run --source='.' foodmood/manage.py test edibles.tests meals.tests users.tests && coverage report && coverage xml" }
test-coverage-html = { shell = "coverage run --source='.' foodmood/manage.py test foodmood -p 'test*.py' && coverage html" }

[tool.poe.tasks.mydc]
shell = """
./scripts/docker.sh
"""
interpreter = "posix"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
